name: Image Build
permissions:
  id-token: write
  contents: write
  pull-requests: write
on:
  push:
    branches: [ dev, master, 'hotfix/*' ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'
    paths:
      - frontend/**
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [dev, master, main,'hotfix/*']
    tags-ignore:
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set.outputs.deploy_env }}
    steps:
      - name: fetch actions repo
        uses: actions/checkout@v3
        with:
          repository: "EleSangwon/github-action-module"
          path: "./actions"
          token: ${{ secrets.GH_PAT }}
          ref: main
      - name: Use set environment
        uses: "./actions/common/set-environment"
        id: set
        with:
          ref: ${{ github.ref_name }}
          head_ref: ${{ github.head_ref }}
          type: ${{ github.ref_type }}

  build:
    runs-on: ubuntu-latest
    needs: set-env
    strategy:
      matrix:
        environment: ["${{ needs.set-env.outputs.env }}"]
    environment: ${{ matrix.environment }}
    steps:
      - name: check env
        run: |
          echo ${{ needs.set-env.outputs.env }}
      - name: fetch actions repo
        uses: actions/checkout@v3
        with:
          repository: "EleSangwon/github-action-module"
          path: "./actions"
          token: ${{ secrets.GH_PAT }}
          ref: main
      # - name: Use aws credentials
      #   uses: "./actions/common/aws/credential"
      #   with:
      #     role-arn: ${{ secrets.AWS_ROLE_ARN }}
      # - name: Use docker build
      #   uses: "./actions/common/docker"
      #   with:
      #     repository: ${{ secrets.ECR_REPOSITORY }}
      #     registry: ${{ secrets.ECR_REGISTRY }}
      #     dockerfile: ./Dockerfile
