name: Image Build
permissions:
  id-token: write
  contents: write
  pull-requests: write
on:
  push:
    branches: [ dev, master, 'hotfix/*' ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'
    # paths:
    #   - frontend/**
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [dev, master, main,'hotfix/*']
    tags-ignore:
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.var.outputs.environment }}
    steps:
      - uses: actions/checkout@v2
      - name: check ref
        run: |
          echo "REF_NAME: ${{ github.ref_name }}"
          echo "HEAD_REF_NAME: ${{ github.head_ref }}"
      - name: output env
        id: var
        run: |
          REF=${{ github.ref_name }}
          echo ::set-output name=environment::$( echo "dev" )
          if [[ ${REF} =~ "master" ]]; then
            echo ::set-output name=environment::$( echo "prod" )
            echo "This branch : ${REF}"
          fi

  build:
    runs-on: ubuntu-latest
    needs: set-environment
    strategy:
      matrix:
        environment: ["${{ needs.set-environment.outputs.environment }}"]
    steps:
      steps:
      - name: fetch actions repo
        uses: actions/checkout@v3
        with:
          repository: "EleSangwon/github-action-module"
          path: "./actions"
          token: ${{ secrets.GH_PAT }}
          ref: main
      - name: file list
        run: |
          ls -al
      # - name: aws credentials
      #   uses: "./actions/common/aws/credentials"
      #   with:
      #     role-arn: ${{ secrets.AWS_ROLE_ARN }}
      # - name: Use docker build action
      #   uses: "./actions/common/build/docker"
      #   with:
      #     repository: ${{ secrets.ecr }}
      #     registry: ${{ secrets.ECR_REGISTRY }}
      #     dockerfile: ./Dockerfile
